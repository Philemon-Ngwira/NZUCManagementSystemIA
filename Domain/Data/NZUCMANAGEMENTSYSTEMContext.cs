// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using NZUCManagementSystemIA.Shared.Models;

namespace Domain.Data
{
    public partial class NZUCMANAGEMENTSYSTEMContext : DbContext
    {
        public NZUCMANAGEMENTSYSTEMContext()
        {
        }

        public NZUCMANAGEMENTSYSTEMContext(DbContextOptions<NZUCMANAGEMENTSYSTEMContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AuthorizerTable> AuthorizerTables { get; set; }
        public virtual DbSet<BudgetTypeTable> BudgetTypeTables { get; set; }
        public virtual DbSet<ConferencesAndField> ConferencesAndFields { get; set; }
        public virtual DbSet<Departments_Table> Departments_Tables { get; set; }
        public virtual DbSet<EmployeeTable> EmployeeTables { get; set; }
        public virtual DbSet<GenderTable> GenderTables { get; set; }
        public virtual DbSet<IncomeExpenseBudgetType> IncomeExpenseBudgetTypes { get; set; }
        public virtual DbSet<IncomeExpensesOperatingType> IncomeExpensesOperatingTypes { get; set; }
        public virtual DbSet<OperatingIncomeExpense> OperatingIncomeExpenses { get; set; }
        public virtual DbSet<OperatingType> OperatingTypes { get; set; }
        public virtual DbSet<PaymentMethodTable> PaymentMethodTables { get; set; }
        public virtual DbSet<PaymentType> PaymentTypes { get; set; }
        public virtual DbSet<ReviewTransactionTable> ReviewTransactionTables { get; set; }
        public virtual DbSet<ReviewersTable> ReviewersTables { get; set; }
        public virtual DbSet<SalaryTable> SalaryTables { get; set; }
        public virtual DbSet<TransactionTable> TransactionTables { get; set; }
        public virtual DbSet<YearlyBudgetTable> YearlyBudgetTables { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AuthorizerTable>(entity =>
            {
                entity.HasOne(d => d.AuthorizerName)
                    .WithMany(p => p.AuthorizerTables)
                    .HasForeignKey(d => d.AuthorizerNameId)
                    .HasConstraintName("FK_AuthorizerTable_EmployeeTable");
            });

            modelBuilder.Entity<EmployeeTable>(entity =>
            {
                entity.HasOne(d => d.Department)
                    .WithMany(p => p.EmployeeTables)
                    .HasForeignKey(d => d.DepartmentId)
                    .HasConstraintName("FK_Employee Table_Departments Table");

                entity.HasOne(d => d.Gender)
                    .WithMany(p => p.EmployeeTables)
                    .HasForeignKey(d => d.GenderId)
                    .HasConstraintName("FK_Employee Table_Gender Table");

                entity.HasOne(d => d.SalaryNavigation)
                    .WithMany(p => p.EmployeeTables)
                    .HasForeignKey(d => d.Salary)
                    .HasConstraintName("FK_Employee Table_Salary Table");
            });

            modelBuilder.Entity<IncomeExpenseBudgetType>(entity =>
            {
                entity.HasOne(d => d.TypeofBudget)
                    .WithMany(p => p.IncomeExpenseBudgetTypes)
                    .HasForeignKey(d => d.TypeofBudgetId)
                    .HasConstraintName("FK_IncomeBudgetType_BudgetTypeTable");
            });

            modelBuilder.Entity<IncomeExpensesOperatingType>(entity =>
            {
                entity.HasOne(d => d.OperatingTypeNavigation)
                    .WithMany(p => p.IncomeExpensesOperatingTypes)
                    .HasForeignKey(d => d.OperatingType)
                    .HasConstraintName("FK_IncomeExpensesOperatingTypes_OperatingTypes");
            });

            modelBuilder.Entity<OperatingIncomeExpense>(entity =>
            {
                entity.HasOne(d => d.Conference)
                    .WithMany(p => p.OperatingIncomeExpenses)
                    .HasForeignKey(d => d.ConferenceId)
                    .HasConstraintName("FK_OperatingIncomeExpenses_ConferencesAndField");

                entity.HasOne(d => d.Department)
                    .WithMany(p => p.OperatingIncomeExpenses)
                    .HasForeignKey(d => d.DepartmentId)
                    .HasConstraintName("FK_OperatingIncomeExpenses_Departments Table");

                entity.HasOne(d => d.IncomeExpenseOperatingTypeNavigation)
                    .WithMany(p => p.OperatingIncomeExpenses)
                    .HasForeignKey(d => d.IncomeExpenseOperatingType)
                    .HasConstraintName("FK_OperatingIncomeExpenses_OperatingTypes");

                entity.HasOne(d => d.Reviewer)
                    .WithMany(p => p.OperatingIncomeExpenses)
                    .HasForeignKey(d => d.ReviewerId)
                    .HasConstraintName("FK_OperatingIncomeExpenses_ReviewersTable");
            });

            modelBuilder.Entity<ReviewTransactionTable>(entity =>
            {
                entity.HasOne(d => d.Department)
                    .WithMany(p => p.ReviewTransactionTables)
                    .HasForeignKey(d => d.DepartmentId)
                    .HasConstraintName("FK_ReviewTransactionTable_Departments Table");

                entity.HasOne(d => d.Employee)
                    .WithMany(p => p.ReviewTransactionTables)
                    .HasForeignKey(d => d.EmployeeId)
                    .HasConstraintName("FK_ReviewTransactionTable_Employee Table");

                entity.HasOne(d => d.PaymentMethod)
                    .WithMany(p => p.ReviewTransactionTables)
                    .HasForeignKey(d => d.PaymentMethodId)
                    .HasConstraintName("FK_ReviewTransactionTable_PaymentMethodTable");

                entity.HasOne(d => d.PaymentType)
                    .WithMany(p => p.ReviewTransactionTables)
                    .HasForeignKey(d => d.PaymentTypeId)
                    .HasConstraintName("FK_ReviewTransactionTable_PaymentTypes");

                entity.HasOne(d => d.Reviewer)
                    .WithMany(p => p.ReviewTransactionTables)
                    .HasForeignKey(d => d.ReviewerId)
                    .HasConstraintName("FK_ReviewTransactionTable_ReviewersTable");
            });

            modelBuilder.Entity<ReviewersTable>(entity =>
            {
                entity.HasOne(d => d.Employee)
                    .WithMany(p => p.ReviewersTables)
                    .HasForeignKey(d => d.EmployeeId)
                    .HasConstraintName("FK_ReviewersTable_EmployeeTable");
            });

            modelBuilder.Entity<TransactionTable>(entity =>
            {
                entity.HasOne(d => d.Authorizer)
                    .WithMany(p => p.TransactionTables)
                    .HasForeignKey(d => d.AuthorizerId)
                    .HasConstraintName("FK_TransactionTable_AuthorizerTable");
            });

            modelBuilder.Entity<YearlyBudgetTable>(entity =>
            {
                entity.HasOne(d => d.IncomeExpesense)
                    .WithMany(p => p.YearlyBudgetTables)
                    .HasForeignKey(d => d.IncomeExpesenseId)
                    .HasConstraintName("FK_YearlyBudgetTable_IncomeExpenseBudgetTypes");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}