@using NZUCManagementSystemIA.Client.Interfaces
@using NZUCManagementSystemIA.Client.Pages
@using NZUCManagementSystemIA.Shared.Models

<MudNavMenu>
    <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Filled.SpaceDashboard">Dashboard</MudNavLink>
    <AuthorizeView Roles="Authorizer">
        <Authorized>
            <MudBadge Content="@_transactions.Count()" Color="Color.Primary" Overlap="true" Class="my-4">
                <MudNavLink Href="/Pages/Dashboards/Authorizer/AuthorizerDashboard" Match="NavLinkMatch.All" Icon="@Icons.Filled.AdminPanelSettings">Authorize Dashboard</MudNavLink>
            </MudBadge>

        </Authorized>
    </AuthorizeView>
    <AuthorizeView Roles="Reviewer">
        <Authorized>
            <MudNavLink Href="/Pages/Dashboards/Reviewer/ReviewerDashboard" Match="NavLinkMatch.All" Icon="@Icons.Filled.Checklist">Reviewer Dashboard</MudNavLink>
        </Authorized>
    </AuthorizeView>

    <MudNavGroup Title="Employee Management" Expanded="false" Icon="@Icons.Filled.PeopleAlt">
        <MudNavLink Href="/Pages/AppPages/AddEmployee" Match="NavLinkMatch.Prefix" Icon="@Icons.Filled.PersonAddAlt1">Add Employee</MudNavLink>
        <MudNavLink Href="/Pages/AppPages/EmployeeManagement" Match="NavLinkMatch.Prefix" Icon="@Icons.Filled.ManageAccounts">Manage Employees</MudNavLink>
        <MudNavLink Href="/Pages/AppPages/ReviewersManagement" Match="NavLinkMatch.Prefix" Icon="@Icons.Filled.RateReview">Manage Reviewers</MudNavLink>
        <MudNavLink Href="/Pages/AppPages/AuthorizerManagement" Match="NavLinkMatch.Prefix" Icon="@Icons.Filled.Approval">Manage Authorizers</MudNavLink>
    </MudNavGroup>
    <MudNavGroup Title="Salary Management" Expanded="false" Icon="@Icons.Filled.CreditCard">
        <MudNavLink Href="/Pages/AppPages/SalaryScaleManagement" Icon="@Icons.Filled.CreditCard" Match="NavLinkMatch.Prefix">Manage SalaryScales</MudNavLink>
    </MudNavGroup>
    <MudNavGroup Title="Departments And Conferences" Expanded="false" Icon="@Icons.Filled.HomeWork">
        <MudNavLink Href="/Pages/AppPages/DepartmentManagement" Icon="@Icons.Filled.BusinessCenter" Match="NavLinkMatch.Prefix">Manage Departments</MudNavLink>
        <MudNavLink Href="/Pages/AppPages/ConferencesManagement" Icon="@Icons.Filled.Warehouse" Match="NavLinkMatch.Prefix">Conference Managements</MudNavLink>
    </MudNavGroup>
    <MudNavGroup Title="Budgets And Operating Money" Expanded="false" Icon="@Icons.Filled.AccountBalanceWallet">
        <MudNavLink Href="/Pages/AppPages/AddNewBudget" Match="NavLinkMatch.Prefix">New Budget</MudNavLink>
        <MudNavLink Href="/Pages/AppPages/ManageBudgets" Match="NavLinkMatch.Prefix">Manage Budgets</MudNavLink>
    </MudNavGroup>
    <MudNavLink Href="/about" Match="NavLinkMatch.Prefix">About</MudNavLink>
    <MudNavLink Href="/Pages/AppPages/LogOut" Icon="@Icons.Filled.Logout" Match="NavLinkMatch.Prefix">Log Out</MudNavLink>
</MudNavMenu>

@code{
    [Inject] AuthenticationStateProvider AuthenticationState { get; set; }
    [Inject] IGenericRepositoryService GenericRepositoryService { get; set; }
    protected IList<ReviewTransactionTable> _transactions = new List<ReviewTransactionTable>();
    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthenticationState.GetAuthenticationStateAsync()).User.Identity;
        if (user != null && user.IsAuthenticated)
        {
            var timer = new PeriodicTimer(TimeSpan.FromSeconds(3));

            while (await timer.WaitForNextTickAsync())
            {

                await GetTransactions();

            }
        }
    }


    protected async Task GetTransactions()
    {
        {
            var user = (await AuthenticationState.GetAuthenticationStateAsync()).User;
            if (user.IsInRole("Authorizer"))
            {
                var result = await GenericRepositoryService.GetAllAsync<ReviewTransactionTable>("api/NZUCManagement/GetReviewerTransactions");
                _transactions = result.ToList();

            }
        }
    }
}
